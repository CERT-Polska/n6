###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:n6portal

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =


###
# event db configuration
###

## connection URL, e.g.: mysql+mysqldb://n6:somepassword@localhost/n6
## (it must start with `mysql+mysqldb:` (or just `mysql:`) because other
## dialects/drivers are not supported)
#sqlalchemy.url = mysql://user:password@host/dbname

## if you want to use SSL, the following options must be set to
## appropriate file paths:
#mysql.api.ssl_cacert = /some/path/to/CACertificatesFile.pem
#mysql.api.ssl_cert = /some/path/to/ClientCertificateFile.pem
#mysql.api.ssl_key = /some/path/to/private/ClientCertificateKeyFile.pem

##########################################################################################
# Enabling SSL on MySQL server (example):
# * execute in the MySQL shell:
#   GRANT ALL PRIVILEGES ON *.* TO 'user'@'%' IDENTIFIED BY 'password' REQUIRE SSL;
#   or
#   GRANT ALL on *.* TO 'user'@'host' REQUIRE
#       SUBJECT '/O=.../...'
#       AND ISSUER '/O=.../...';
# * add SSL configuration to mysql server in file /etc/my.cnf in section [mysqld]:
#   ssl-ca=/some/path/to/CACertificatesFile.pem
#   ssl-cert=/some/path/to/ServerCertificateFile.pem
#   ssl-key=/some/path/to/private/ServerCertificateKeyFile.pem
##########################################################################################


###
# auth db configuration
###

## connection URL, e.g.: mysql+mysqldb://n6:somepassword@localhost/n6
## (it must start with `mysql+mysqldb:` (or just `mysql:`) because other
## dialects/drivers are not supported)
#auth_db.url = mysql://user:password@host/dbname

## if you want to use SSL, the following options must be set to
## appropriate file paths:
#auth_db.ssl_cacert = /some/path/to/CACertificatesFile.pem
#auth_db.ssl_cert = /some/path/to/ClientCertificateFile.pem
#auth_db.ssl_key = /some/path/to/private/ClientCertificateKeyFile.pem


###
# server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543


###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, n6portal, sqlalchemy

[handlers]
keys = console, syslog
#keys = console, syslog, amqp
#keys = console, syslog, amqp, file

[formatters]
keys = generic, cut_notraceback, only_message, time_and_message


[logger_root]
level = INFO
handlers = console, syslog
#handlers = console, syslog, amqp

[logger_n6portal]
level = INFO
handlers =
# (propagate to the root handler)
propagate = 1
qualname = n6portal

[logger_sqlalchemy]
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)
level = WARN
handlers =
propagate = 1
qualname = sqlalchemy.engine


[handler_syslog]
class = handlers.SysLogHandler
level = ERROR
formatter = cut_notraceback
args = ('/dev/log',)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = WARN
formatter = generic

#[handler_amqp]
#class = n6lib.log_helpers.AMQPHandler
#level = INFO
#args = (
#        {'host': '195.187.7.77',
#         'port': 5671,
#         'ssl': True,
#         'ssl_options': {
#             'ca_certs': '/some/path/to/CACertificatesFile.pem',
#             'certfile': '/some/path/to/ClientCertificateFile.pem',
#             'keyfile': '/some/path/to/private/ClientCertificateKeyFile.pem',
#             'cert_reqs': __import__('ssl', level=0).CERT_REQUIRED,
#         },
#        },
#        'logging',
#        {'exchange_type': 'topic', 'durable': True})
#formatter = generic

#[handler_file]
#class = FileHandler
#level = NOTSET
#formatter = cut
#args = ('/home/somebody/log_all',)


[formatter_generic]
format = n6: %(levelname) -10s %(asctime)s %(name) -25s in %(funcName)s() (#%(lineno)d) [%(threadName)s]: %(message)s

# brief information: no tracebacks, messages no longer than ~2k
[formatter_cut_notraceback]
format = n6: %(levelname) -10s %(asctime)s %(name) -25s in %(funcName)s() (#%(lineno)d) [%(threadName)s]: %(message)s
class = n6lib.log_helpers.NoTracebackCutFormatter

[formatter_only_message]
format = %(message)s

[formatter_time_and_message]
format = [%(asctime)s] %(message)s
