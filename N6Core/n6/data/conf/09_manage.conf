[manage_api]

# Pattern validating the 'O' part of *internal* certificates subjects.
# It applies to "admin" and "component" kinds of owner ("admin" kind
# if 'OU' of certificate's subject is "n6admins" and certificate
# is signed by a service CA; "component" - if 'OU' is "n6components",
# certificate is signed by a service CA).

internal_o_regex_pattern = \Aexample\..{1,64}\Z


# If the 'OU' part of added certificate's subject matches
# the regex pattern, and the certificate is signed by
# a service CA, its owner will be a "server-component".

server_component_ou_regex_pattern = \AMain[ ]Unit\Z


## CA keys

# (for each CA the name of the option that specifies the location of the
# CA's private key is based on the pattern:
# "ca_key_<CA label with '-' replaced with '_'>"
# -- e.g., for a CA whose label is "client-1" it is: "ca_key_client_1")

ca_key_client_1 = /home/someuser/clientCA/private/cakey.pem
ca_key_service_1 = /home/someuser/serviceCA/private/cakey.pem

## NOTE [about an experimental feature; OpenSSL 1.1+ only]:
#
# For a key stored on a PKCS#11-compliant cryptographic token, the value
# of the appropriate `ca_key_...` option should be:
#
#   "pkcs11:<module_path>:<additional_openssl_cmd_args>"
#
# -- where:
#
# * <module_path> is the intended value of the `MODULE_PATH` option in
#   the `[pkcs11_section]` of the OpenSSL configuration
#
#   -- e.g.: "opensc-pkcs11.so"
#
# * <additional_openssl_cmd_args> is a bunch of additional `openssl`
#   commandline arguments (whitespace-separated), typically including
#   the "-keyfile" option
#
#   -- e.g.: "-keyfile foo:bar -keyform spam"
#
#   note, however, that it should *not* include the options: "-engine"
#   (which is automatically set to "pkcs11") and "-name" (which is
#   automatically set to the value of the "default_ca" option of the
#   "[ca]" section of the OpenSSL configuration)
#
# (the OpenSSL configuration, containing (among others) the
# `MODULE_PATH` option mentioned above, will be generated automatically
# by the Manage API machinery, based (among others) on the SSL config
# stored in the appropriate record of the Auth DB).
#
# An example of a PKCS#11-token-dedicated setting:
#
# ca_key_client_2 = pkcs11:opensc-pkcs11.so:-keyform engine -keyfile slot_0-id_2
