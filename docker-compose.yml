# docker-compose for public n6
version: '2'

services:
  work:
# build image with custom tag
    image: "n6-pub-work"
    build:
      context: .
      dockerfile: ./docker/work/Dockerfile
    container_name: n6
    hostname: n6
    environment:
      N6_FORCE_LDAP_API_REPLACEMENT: 1
    volumes:
      - n6_logs:/var/log/n6/
      - certs:/root/certs/
    command: ["supervisord", "-c", "etc/supervisord/supervisord.conf"]
    networks:
      - n6-pub-net
  web:
    image: "n6-pub-web"
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    depends_on:
      - work
    hostname: apache
    restart: always
    container_name: web
    ports:
      - "80:80" # redirect permanently to 443
      - "443:443" # n6 Portal
      - "4443:4443" # n6 REST API
      - "4444:4444" # n6 Admin Panel
    volumes:
    - certs:/home/dataman/certs/
    networks:
      - n6-pub-net
  rabbit:
    image: "n6-pub-rabbit"
    build:
      context: .
      dockerfile: ./docker/rabbit/Dockerfile
    depends_on:
      - work
    hostname: rabbit
    restart: always
    container_name: rabbit
    ports:
      - "15671:15671" # rabbitmq web management
    volumes:
    - certs:/root/certs/
    networks:
      - n6-pub-net
  mongo:
    image: "n6-pub-mongo"
    build:
      context: .
      dockerfile: ./docker/mongo/Dockerfile
    hostname: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: n6
    container_name: mongo
    ports:
      - "27017:27017" # used by MongoDB
    command: --smallfiles --auth
    networks:
      - n6-pub-net
  mysql:
    image: "n6-pub-mysql"
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    hostname: mysql
    restart: always
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - "3306:3306"
    networks:
      - n6-pub-net

volumes:
  certs: {}
  n6_logs: {}

networks:
  n6-pub-net:
    driver: bridge
