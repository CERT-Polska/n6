# Copyright (c) 2014-2023 NASK. All rights reserved.

"""
Parser: `malwarepatrol.malurl.201406`.
"""

import csv
import datetime

from n6datasources.parsers.base import (
    BlackListParser,
    add_parser_entry_point_functions,
)
from n6lib.csv_helpers import strip_fields
from n6lib.datetime_helpers import parse_iso_datetime_to_utc
from n6lib.log_helpers import get_logger
from n6lib.record_dict import AdjusterError


LOGGER = get_logger(__name__)


class MalwarepatrolMalurl201406Parser(BlackListParser):
    # Note: since we no longer actively use the `malwarepatrol.*`
    # source, this parser no longer has a corresponding collector.
    # We have left the source code in place in case there is a need
    # to retrieve data in the future.

    default_binding_key = 'malwarepatrol.malurl.201406'
    constant_items = {
        'restriction': 'public',
        'confidence': 'low',
        'category': 'malurl',
    }

    def parse(self, data):
        rows = csv.reader(data['csv_raw_rows'], delimiter=',', quotechar='"')
        timestamp = data['properties.timestamp']
        for url in rows:
            url = strip_fields(url[0])
            if url.startswith('#') or url.startswith('['):
                continue
            with self.new_record_dict(data) as parsed:
                try:
                    parsed['time'] = timestamp
                    parsed['expires'] = (parse_iso_datetime_to_utc(data['properties.timestamp']) +
                                         datetime.timedelta(days=2))
                    parsed['url'] = url
                except AdjusterError:
                    continue
                yield parsed


add_parser_entry_point_functions(__name__)
