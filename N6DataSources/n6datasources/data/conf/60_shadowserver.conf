# Collectors

[ShadowserverMailCollector]

# A regular expression whose first capturing group matches the
# *pure subject* part (i.e., the important, distinct part) of
# an e-mail message's subject:
subject_pattern = Shadowserver (.+) Report

# A regular expression whose first capturing group matches,
# within an e-mail message's body, the URL to download data
# from:
item_url_pattern = (https?://dl.shadowserver.org/[?a-zA-Z0-9_-]+)

# A Python dictionary that maps *pure subjects* (see above) to
# the corresponding *source channels* (note that this collector
# collaborates with multiple parsers...):
subject_to_channel = {
    "Poland Sinkhole HTTP Referrer": "sinkhole-referrer",
    "Poland Sinkhole HTTP Drone": "sinkhole-drone",
    "Poland Spam URL": "spam-url",
    "Poland Drone": "drone",
    "Poland Sandbox URL": "sandbox-url",
    "Poland Command and Control": "cnc",
    "Poland Microsoft Sinkhole": "sinkhole-microsoft",
    "Poland Compromised Website": "compromised-website",
    "Poland Open Proxy": "open-proxy",
    "Poland DNS Open Resolvers": "open-resolver",
    "Poland IPMI": "ipmi",
    "Poland Chargen": "chargen",
    "Poland Netbios": "netbios",
    "Poland NTP Version": "ntp-version",
    "Poland Accessible SMB Service": "smb",
    "Poland SNMP": "snmp",
    "Poland SSDP": "ssdp",
    "Poland QOTD": "qotd",
    "Poland Netcore/Netis Router Vulnerability Scan": "netis",
    "Poland SSLv3/Poodle Vulnerable Servers": "ssl-poodle",
    "Poland Open Redis Server": "redis",
    "Poland Open Memcached Server": "memcached",
    "Poland Accessible/Open MongoDB Service": "mongodb",
    "Poland Vulnerable NAT-PMP Systems": "natpmp",
    "Poland Open MS-SQL Server Resolution Service": "mssql",
    "Poland Open Elasticsearch Server": "elasticsearch",
    "Poland SSL/Freak Vulnerable Servers": "ssl-freak",
    "Poland NTP Monitor": "ntp-monitor",
    "Poland Open Portmapper Scan": "portmapper",
    "Poland SYNful Knock": "synfulknock",
    "Poland Open mDNS Servers": "mdns",
    "Poland Accessible XDMCP Service": "xdmcp",
    "Poland Open DB2 Discovery Service": "db2",
    "Poland Accessible RDP Services": "rdp",
    "Poland Open TFTP Servers": "tftp",
    "Poland ISAKMP Vulnerability Scan": "isakmp",
    "Poland Accessible Telnet Service": "telnet",
    "Poland Accessible CWMP": "cwmp",
    "Poland Open LDAP Services": "ldap",
    "Poland IPv6 Sinkhole HTTP Drone": "ipv6-sinkhole-drone",
    "Poland Accessible VNC Service": "vnc",
    "Poland Sinkhole HTTP Events": "sinkhole-http",
    "Poland Sinkhole Events": "sinkhole",
    "Poland Darknet Events": "darknet",
    "Poland Accessible Modbus": "modbus",
    "Poland Accessible ICS": "ics",
    "Poland Accessible CoAP": "coap",
    "Poland Accessible Ubiquiti Discovery Service": "ubiquiti",
    "Poland Accessible Apple Remote Desktop": "ard",
    "Poland Accessible MS-RDPEUDP": "rdpeudp",
    "Poland Accessible DVR DHCPDiscover": "dvr-dhcpdiscover",
    "Poland Vulnerable HTTP": "http",
    "Poland Accessible FTP Service": "ftp",
    "Poland Open MQTT": "mqtt",
    "Poland Open LDAP (TCP) Services": "ldap-tcp",
    "Poland Accessible Rsync Service": "rsync",
    "Poland Accessible Radmin": "radmin",
    "Poland Accessible Android Debug Bridge": "adb",
    "Poland Accessible Apple Filing Protocol": "afp",
    "Poland Accessible Cisco Smart Install": "cisco-smart-install",
    "Poland Open IPP": "ipp",
    "Poland Accessible Hadoop Service": "hadoop",
    "Poland Vulnerable Exchange Server": "exchange",
    "Poland Vulnerable SMTP": "smtp",
    "Poland Accessible AMQP": "amqp",
  }

# A Python dictionary that maps, for all corresponding parsers,
# *source channels* to *raw format version tags* (`str`) or
# `None` values (the latter if the given parser does not have
# a *raw format version tag*):
channel_to_raw_format_version_tag = {
    "adb": "202204",
    "afp": "202204",
    "amqp": "202204",
    "ard": "202204",
    "chargen": "201412",
    "cisco-smart-install": "202204",
    "coap": "202204",
    "compromised-website": "201412",
    "cwmp": "201412",
    "darknet": "202203",
    "db2": "201412",
    "dvr-dhcpdiscover": "202204",
    "elasticsearch": "201412",
    "exchange": "202204",
    "ftp": "202204",
    "hadoop": "202204",
    "http": "202204",
    "ics": "202204",
    "ipmi": "201412",
    "ipp": "202204",
    "isakmp": "201412",
    "ldap": "201412",
    "ldap-tcp": "202204",
    "mdns": "201412",
    "memcached": "201412",
    "modbus": "202203",
    "mongodb": "201412",
    "mqtt": "202204",
    "mssql": "201412",
    "natpmp": "201412",
    "netbios": "201412",
    "netis": "201412",
    "ntp-monitor": "201412",
    "ntp-version": "201412",
    "open-resolver": "201412",
    "portmapper": "201412",
    "qotd": "201412",
    "radmin": "202204",
    "rdp": "201412",
    "rdpeudp": "202204",
    "redis": "201412",
    "rsync": "202204",
    "sandbox-url": "201412",
    "sinkhole": "202203",
    "sinkhole-http": "202203",
    "smb": "201412",
    "smtp": "202204",
    "snmp": "201412",
    "ssdp": "201412",
    "ssl-freak": "201412",
    "ssl-poodle": "201412",
    "telnet": "201412",
    "tftp": "201412",
    "ubiquiti": "202204",
    "vnc": "201412",
    "xdmcp": "201412",
  }

# Usually, these defaults should be OK. If not, do not
# hesitate to uncomment and customize them:
;download_retries = 3
;base_request_headers = {}



# Parsers

[ShadowserverAdb202204Parser]
prefetch_count = 1

[ShadowserverAfp202204Parser]
prefetch_count = 1

[ShadowserverAmqp202204Parser]
prefetch_count = 1

[ShadowserverArd202204Parser]
prefetch_count = 1

[ShadowserverChargen201412Parser]
prefetch_count = 1

[ShadowserverCiscoSmartInstall202204Parser]
prefetch_count = 1

[ShadowserverCoap202204Parser]
prefetch_count = 1

[ShadowserverCompromisedWebsite201412Parser]
prefetch_count = 1

[ShadowserverCwmp201412Parser]
prefetch_count = 1

[ShadowserverDarknet202203Parser]
prefetch_count = 1

[ShadowserverDb2201412Parser]
prefetch_count = 1

[ShadowserverDvrDhcpdiscover202204Parser]
prefetch_count = 1

[ShadowserverElasticsearch201412Parser]
prefetch_count = 1

[ShadowserverExchange202204Parser]
prefetch_count = 1

[ShadowserverFtp202204Parser]
prefetch_count = 1

[ShadowserverHadoop202204Parser]
prefetch_count = 1

[ShadowserverHttp202204Parser]
prefetch_count = 1

[ShadowserverIcs202204Parser]
prefetch_count = 1

[ShadowserverIpmi201412Parser]
prefetch_count = 1

[ShadowserverIpp202204Parser]
prefetch_count = 1

[ShadowserverIsakmp201412Parser]
prefetch_count = 1

[ShadowserverLdap201412Parser]
prefetch_count = 1

[ShadowserverLdapTcp202204Parser]
prefetch_count = 1

[ShadowserverMdns201412Parser]
prefetch_count = 1

[ShadowserverMemcached201412Parser]
prefetch_count = 1

[ShadowserverModbus202203Parser]
prefetch_count = 1

[ShadowserverMongodb201412Parser]
prefetch_count = 1

[ShadowserverMqtt202204Parser]
prefetch_count = 1

[ShadowserverMssql201412Parser]
prefetch_count = 1

[ShadowserverNatpmp201412Parser]
prefetch_count = 1

[ShadowserverNetbios201412Parser]
prefetch_count = 1

[ShadowserverNetis201412Parser]
prefetch_count = 1

[ShadowserverNtpMonitor201412Parser]
prefetch_count = 1

[ShadowserverNtpVersion201412Parser]
prefetch_count = 1

[ShadowserverOpenResolver201412Parser]
prefetch_count = 1

[ShadowserverPortmapper201412Parser]
prefetch_count = 1

[ShadowserverQotd201412Parser]
prefetch_count = 1

[ShadowserverRadmin202204Parser]
prefetch_count = 1

[ShadowserverRdp201412Parser]
prefetch_count = 1

[ShadowserverRdpeudp202204Parser]
prefetch_count = 1

[ShadowserverRedis201412Parser]
prefetch_count = 1

[ShadowserverRsync202204Parser]
prefetch_count = 1

[ShadowserverSandboxUrl201412Parser]
prefetch_count = 1

[ShadowserverSinkhole202203Parser]
prefetch_count = 1

[ShadowserverSinkholeHttp202203Parser]
prefetch_count = 1

[ShadowserverSmb201412Parser]
prefetch_count = 1

[ShadowserverSmtp202204Parser]
prefetch_count = 1

[ShadowserverSnmp201412Parser]
prefetch_count = 1

[ShadowserverSsdp201412Parser]
prefetch_count = 1

[ShadowserverSslFreak201412Parser]
prefetch_count = 1

[ShadowserverSslPoodle201412Parser]
prefetch_count = 1

[ShadowserverTelnet201412Parser]
prefetch_count = 1

[ShadowserverTftp201412Parser]
prefetch_count = 1

[ShadowserverUbiquiti202204Parser]
prefetch_count = 1

[ShadowserverVnc201412Parser]
prefetch_count = 1

[ShadowserverXdmcp201412Parser]
prefetch_count = 1
